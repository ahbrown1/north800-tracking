# Translate Wells Fargo account summary CSV 
input {
  file {
    path => "/home/ubuntu/n8gdrive/Wells_Fargo_Downloads/Checking2.csv" 
    #path => "/Users/artb/repos/north800llc/Checking2.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => read 
    exit_after_read => true 
    type => "income_acct"
  }
  file {
    path => "/home/ubuntu/n8gdrive/Wells_Fargo_Downloads/Checking3.csv" 
    #path => "/Users/artb/repos/north800llc/Checking2.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => read 
    exit_after_read => true 
    type => "operating_acct"
  }
#  file {
#    path => "/Users/artb/repos/north800llc/Checking3.csv"
#    start_position => "beginning"
#    sincedb_path => "/dev/null"
#    mode => read 
    #exit_after_read => true 
#    type => "operating_acct"
#  }
}

filter {
      csv {
        columns => [ "xdate", "amount", "c1", "c2", "description" ]
      }
}
filter {
      date {
        match => [ "xdate", "MM/dd/YYYY" ]
      }
}
filter {
   
   ruby { 
        code =>  "
        require 'digest/md5'

        msg = event.get('message')
	checksum = Digest::MD5.hexdigest(msg)
	event.set('doc_id', checksum )
	p event.get('doc_id')
	amount = event.get('amount').to_f
	delta = amount

        if amount >= 0.0
	   xtype = 'deposit'
	   event.set('deposit', amount)
        else
	   xtype = 'withdrawl'
	   event.set('withdrawl', amount.abs)
	end
	event.set('xtype', xtype)
	event.set('amount', amount.abs)
	event.set('delta', amount)

        "
   } 
}

filter {
      mutate {
        remove_field => [ "@version", "xdate", "path" , "message", "c1", "c2", "host" ]
      }
    }
output {
#  elasticsearch { 
#     hosts => ["localhost:9200"] 
#     index => "n800-wf_xns-%{+YYYY-MM-dd}"
#     document_id => "%{doc_id}"
#  }
  stdout{}

 }
