# Translate Buildium ledger account  CSV 
#
input {
 file {
    path => "/usr/share/logstash/repos/gdrive/remote/2020_YTD/Buildium_Uploads/General_Ledger.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    mode => read 
    exit_after_read => true 

  }
}

filter {
      csv {
        autodetect_column_names => true
      }
}
filter {
   
   ruby { 
      code =>  "
        require 'digest/md5'

        msg = event.get('message')
	checksum = Digest::MD5.hexdigest(msg)
	event.set('doc_id', checksum )
      "
   }
}

filter { 
    mutate { rename => { "entryDate" => "entrydate" } }
}

 
filter {
      date {
        match => [ "entrydate", "MM/dd/yyyy HH:mm:ss a"  ]
      }
}

#	p event.get('doc_id')
#	typ = event.get('type')
#	amount = event.get('amount').to_f
#	#delta = amount
#        p 'TYPE: ' + typ
#        if typ == 'reference'
#	   xtype = 'calibrate'
#	   event.set('reference', amount)
#           amount = 0.0
#           
#
#        elsif amount >= 0.0
#	   xtype = 'deposit'
#	   event.set('deposit', amount)
#        else
#	   xtype = 'withdrawl'
#	   event.set('withdrawl', amount.abs)
#	end
#	event.set('xtype', xtype)
#	event.set('amount', amount)
#	#event.set('delta', amount)
#
#        "
#   } 
#}
#
filter {
      mutate {
        remove_field => [  "host", "message", "path", "@version", "entrydate" ]
      }
}

output {
# elasticsearch {
#     hosts => ["https://vpc-n8-elasticsearch-3wr5742lihatxtsndxy6kmb6ci.us-east-1.es.amazonaws.com:443"]
#     index => "es_n800-wf_xns-%{+YYYY-MM-dd}"
#     document_id => "%{doc_id}"
#     ilm_enabled => false
#  }

  stdout{}
  

 }
